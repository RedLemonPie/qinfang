<template>
  <view id="adminPage" class="container">
    <van-nav-bar
      title="管理员菜单"
      left-text="返回"
      right-text="按钮"
      left-arrow
      bind:click-left="onClickLeft"
      bind:click-right="onClickRight"
    />
    <van-tabs active="{{ active }}" bind:change="onChange">
      <van-tab title="开门">
        <van-button type="primary" size="large" @click="openDoor()">开门</van-button>
      </van-tab>
      <van-tab title="更新时间">
        <van-button type="primary" size="large" @click="updateTime()">更新时间</van-button>
      </van-tab>
      <van-tab title="更新门牌">
        <van-field value="{{ doornumber }}" label="门牌号" placeholder="请输入要更新的门牌号" bind:change="onChangedoornum" />
        <van-button type="primary" size="large" @click="updateDoor()">更新门牌</van-button>
      </van-tab>
      <van-tab title="结束时间">
        <van-field value="{{ endtime }}" label="结束时间" placeholder="请输入要更新的结束时间"  bind:change="onChangeendtime" />
        <van-button type="primary" size="large" @click="updateEndTime()">结束时间</van-button>
      </van-tab>
      <van-tab title="更新秘钥">
        <van-field value="{{ updatekey }}" label="秘钥" placeholder="请输入要更新的秘钥" bind:change="onChangekey"/>
        <van-button type="primary" size="large" @click="updateKey()">更新秘钥</van-button>
      </van-tab>
      <van-tab title="测试">
        <van-field value="{{test.doornumber}}" label="门牌号" placeholder="请输入" bind:change="onChangetestdoornum"/>
        <van-datetime-picker type="datetime" data-type="datetime" value="{{ test.starttime }}" bind:input="onChangeteststarttime" visible-item-count="3" item-height= "33" title="开始时间"/>
        <van-datetime-picker type="datetime" data-type="datetime" value="{{ test.endtime }}" bind:input="onChangetestendtime" visible-item-count="3" item-height= "33" title="结束时间"/>
        <van-button type="primary" size="large" @click="test()">测试</van-button>
      </van-tab>
    </van-tabs>
    <van-popup show="{{ show }}" >
      <qrcode  show="{{ show }}" :pass.sync="passStr"></qrcode>
      <view class="passStr">{{passStr}}</view>
      <van-button @click = "onclose()">关闭</van-button>
    </van-popup>
    <!-- 开门 更新时间 更新门牌  更新结束时间 更新秘钥 测试 -->
  </view>
</template>


<script>
import wepy from 'wepy'
import Qrcode from '../../components/qrcode'
let drawQrcode = require('weapp-qrcode')
export default class Home extends wepy.page {
  config = {
    navigationBarTitleText: '首页',
    usingComponents: {
      'van-button': '/vant/button/index',
      'van-nav-bar': '/vant/nav-bar/index',
      'van-tab': '/vant/tab/index',
      'van-tabs': '/vant/tabs/index',
      'van-popup': '/vant/popup/index',
      'van-field': '/vant/field/index',
      'van-datetime-picker': '/vant/datetime-picker/index'
    }
  }
  onChange(event) {}
  components = {
    qrcode: Qrcode
  }
  // 数据绑定
  onChangedoornum(event){
    this.doornumber = event.detail
  }
  onChangeendtime(event){
    this.endtime = event.detail
  }
  onChangekey(event){
    this.updatekey = event.detail
  }
  onChangetestendtime(event){
    this.test.endtime = event.detail
    const date = new Date(event.detail).toLocalString()
  }
  onChangeteststarttime(event){
    console.log(event.detail)
    this.test.starttime = event.detail
    const date = new Date(event.detail).toLocalString()
  }
  onChangetestdoornum(event){
    this.test.doornumber = event.detail
  }
  //
  data = {
    active: 0,
    updateTime: '',
    passStr: '000',
    show: false,
    text: 'xxxx',
    inputValue: '',
    maskStatus: 'hide',
    doornumber: '',
    endtime:'5',
    updatekey: '',
    key: '',
    minDate: new Date().getTime(),
    test:{
      doornumber: '',
      starttime: new Date().getTime(),
      endtime: new Date().getTime()
    }
  } 

  draw() {
    drawQrcode({
      width: 200,
      height: 200,
      canvasId: 'myQrcode',
      typeNumber: 6,
      text: this.passStr
    }) 
  }
  onLoad() {
    this.draw() 
  }
  onclose(){
    this.show = false
  }
  getUpdateTime() {
    let date = new Date()
    var Y = date.getFullYear()
    var M =
      date.getMonth() + 1 < 10
        ? '0' + (date.getMonth() + 1)
        : date.getMonth() + 1
    var D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate()
    var h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours() 
    var m =
      date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()
    var s =
      date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()
    let t = date.getDay()
    this.updateTime = Y + M + D + h + m + s + t
    console.log(this.updateTime)
  }
  computed = {} 
  methods = {
    onClose() {
      this.setData({ show: false }) 
    },
    openDoor() {
      this.passStr = 'NameGLYLevel' + 'OpenDoor' + '123456' + '$' 
      this.show = true
    },
    updateTime() {
      this.getUpdateTime() 
      this.passStr = 'NameGLYLevel'+ 'UpdateWhile' + this.updateTime + '$'
      this.show = true
    },
    updateDoor() {
      this.passStr = 'NameGLYLevel'+ 'UpdateRoom' + this.doornumber + '$'
      this.show = true
    },
    updateEndTime() {
      this.passStr = 'NameGLYLevel'+ 'UpdateEndTime' + this.endtime + '$'
      this.show = true
    },
    updateKey() {
      this.passStr = 'NameGLYLevel'+ 'UpdateKey' + this.updatekey + '$'
      this.show = true
    },
    test() {
      //Name_XSLevelRoomA101Time11550077261Time21550080201$
      this.passStr = 'Name_XSLevelRoom'+ this.test.doornumber + 'Time1'+ this.test.starttime.toString().substr(0,10) + 'Time2' + this.test.endtime.toString().substr(0,10) +'$'
      console.log(this.test.starttime)
      this.show = true
    },
    onClickLeft(){
      wx.navigateBack({
      delta: 1
      })
    }
  } 
  event = {} 
}
</script>
s
<style>
Page {
  background-color: #d3d3d3 
}
.passStr{
  font-size: 20rpx;
}
</style>
